Terminals unused in grammar

   T_ARITH_OP
   T_puts
   T_opencurly
   T_closecurly
   T_exp
   T_true
   T_false
   T_inrange
   T_exrange


Grammar

    0 $accept: line $end

    1 line: expression
    2     | line expression
    3     | statement
    4     | line statement
    5     | error '\n'

    6 expression: booleanExp
    7           | operatorExp

    8 operatorExp: operatorExp '*' operatorExp
    9            | operatorExp '/' operatorExp
   10            | operatorExp '+' operatorExp
   11            | operatorExp '-' operatorExp
   12            | term

   13 relationalExp: term T_REL_OP_SING term
   14              | term relDbl term

   15 booleanExp: relationalExp boolExp2
   16           | T_not relationalExp

   17 boolExp2: T_and relationalExp
   18         | T_or relationalExp

   19 arrayExp: T_openbox numList T_closebox

   20 numList: intList
   21        | fltList

   22 intList: T_int T_comma intList
   23        | T_int

   24 fltList: T_flt T_comma fltList
   25        | T_flt

   26 assignmentExp: T_id T_asop operatorExp
   27              | T_id T_asop arrayExp
   28              | T_id T_asop T_string
   29              | T_id T_addas expression
   30              | T_id T_subas expression
   31              | T_id T_mulas expression
   32              | T_id T_divas expression
   33              | T_id T_modas expression
   34              | T_id T_expas expression

   35 conditionalExp: relationalExp
   36               | booleanExp

   37 relDbl: T_comp
   38       | T_gte
   39       | T_lte
   40       | T_ne
   41       | T_ccomp
   42       | T_scomp

   43 statement: T_return term
   44          | iterStat
   45          | selStat
   46          | assignmentExp
   47          | functionStat
   48          | classStat

   49 term: term1
   50     | term2

   51 term1: T_int
   52      | T_flt
   53      | T_openpar operatorExp T_closepar

   54 term2: T_id

   55 iterStat: T_while conditionalExp T_do whileExp T_end
   56         | T_begin whileExp T_end T_while conditionalExp

   57 whileExp: statement whileExp
   58         | %empty

   59 selStat: T_case T_id whenStat T_end

   60 whenStat: T_when term whenExp whenOptional

   61 whenExp: statement whenExpOpt

   62 whenOptional: T_else whenExp
   63             | whenStat
   64             | %empty

   65 whenExpOpt: whenExp
   66           | %empty

   67 functionStat: T_def T_id T_openpar T_id T_closepar funcExp T_end

   68 funcExp: statement funcExp2

   69 funcExp2: funcExp
   70         | %empty

   71 classStat: T_class T_id classExp T_end

   72 classExp: statement classExp2

   73 classExp2: classExp
   74          | %empty


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 5
'*' (42) 8
'+' (43) 10
'-' (45) 11
'/' (47) 9
error (256) 5
T_int (258) 22 23 51
T_flt (259) 24 25 52
T_id (260) 26 27 28 29 30 31 32 33 34 54 59 67 71
T_string (261) 28
T_ARITH_OP (262)
T_REL_OP_SING (263) 13
T_puts (264)
T_do (265) 55
T_end (266) 55 56 59 67 71
T_begin (267) 56
T_when (268) 60
T_case (269) 59
T_while (270) 55 56
T_else (271) 62
T_return (272) 43
T_def (273) 67
T_class (274) 71
T_openpar (275) 53 67
T_closepar (276) 53 67
T_opencurly (277)
T_closecurly (278)
T_openbox (279) 19
T_closebox (280) 19
T_asop (281) 26 27 28
T_exp (282)
T_comp (283) 37
T_gte (284) 38
T_lte (285) 39
T_ne (286) 40
T_ccomp (287) 41
T_scomp (288) 42
T_expas (289) 34
T_addas (290) 29
T_subas (291) 30
T_mulas (292) 31
T_divas (293) 32
T_modas (294) 33
T_and (295) 17
T_or (296) 18
T_not (297) 16
T_comma (298) 22 24
T_true (299)
T_false (300)
T_inrange (301)
T_exrange (302)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
line (54)
    on left: 1 2 3 4 5, on right: 0 2 4
expression (55)
    on left: 6 7, on right: 1 2 29 30 31 32 33 34
operatorExp (56)
    on left: 8 9 10 11 12, on right: 7 8 9 10 11 26 53
relationalExp (57)
    on left: 13 14, on right: 15 16 17 18 35
booleanExp (58)
    on left: 15 16, on right: 6 36
boolExp2 (59)
    on left: 17 18, on right: 15
arrayExp (60)
    on left: 19, on right: 27
numList (61)
    on left: 20 21, on right: 19
intList (62)
    on left: 22 23, on right: 20 22
fltList (63)
    on left: 24 25, on right: 21 24
assignmentExp (64)
    on left: 26 27 28 29 30 31 32 33 34, on right: 46
conditionalExp (65)
    on left: 35 36, on right: 55 56
relDbl (66)
    on left: 37 38 39 40 41 42, on right: 14
statement (67)
    on left: 43 44 45 46 47 48, on right: 3 4 57 61 68 72
term (68)
    on left: 49 50, on right: 12 13 14 43 60
term1 (69)
    on left: 51 52 53, on right: 49
term2 (70)
    on left: 54, on right: 50
iterStat (71)
    on left: 55 56, on right: 44
whileExp (72)
    on left: 57 58, on right: 55 56 57
selStat (73)
    on left: 59, on right: 45
whenStat (74)
    on left: 60, on right: 59 63
whenExp (75)
    on left: 61, on right: 60 62 65
whenOptional (76)
    on left: 62 63 64, on right: 60
whenExpOpt (77)
    on left: 65 66, on right: 61
functionStat (78)
    on left: 67, on right: 47
funcExp (79)
    on left: 68, on right: 67 69
funcExp2 (80)
    on left: 69 70, on right: 68
classStat (81)
    on left: 71, on right: 48
classExp (82)
    on left: 72, on right: 71 73
classExp2 (83)
    on left: 73 74, on right: 72


State 0

    0 $accept: . line $end

    error      shift, and go to state 1
    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 4
    T_begin    shift, and go to state 5
    T_case     shift, and go to state 6
    T_while    shift, and go to state 7
    T_return   shift, and go to state 8
    T_def      shift, and go to state 9
    T_class    shift, and go to state 10
    T_openpar  shift, and go to state 11
    T_not      shift, and go to state 12

    line           go to state 13
    expression     go to state 14
    operatorExp    go to state 15
    relationalExp  go to state 16
    booleanExp     go to state 17
    assignmentExp  go to state 18
    statement      go to state 19
    term           go to state 20
    term1          go to state 21
    term2          go to state 22
    iterStat       go to state 23
    selStat        go to state 24
    functionStat   go to state 25
    classStat      go to state 26


State 1

    5 line: error . '\n'

    '\n'  shift, and go to state 27


State 2

   51 term1: T_int .

    $default  reduce using rule 51 (term1)


State 3

   52 term1: T_flt .

    $default  reduce using rule 52 (term1)


State 4

   26 assignmentExp: T_id . T_asop operatorExp
   27              | T_id . T_asop arrayExp
   28              | T_id . T_asop T_string
   29              | T_id . T_addas expression
   30              | T_id . T_subas expression
   31              | T_id . T_mulas expression
   32              | T_id . T_divas expression
   33              | T_id . T_modas expression
   34              | T_id . T_expas expression
   54 term2: T_id .

    T_asop   shift, and go to state 28
    T_expas  shift, and go to state 29
    T_addas  shift, and go to state 30
    T_subas  shift, and go to state 31
    T_mulas  shift, and go to state 32
    T_divas  shift, and go to state 33
    T_modas  shift, and go to state 34

    $default  reduce using rule 54 (term2)


State 5

   56 iterStat: T_begin . whileExp T_end T_while conditionalExp

    T_id      shift, and go to state 35
    T_begin   shift, and go to state 5
    T_case    shift, and go to state 6
    T_while   shift, and go to state 7
    T_return  shift, and go to state 8
    T_def     shift, and go to state 9
    T_class   shift, and go to state 10

    $default  reduce using rule 58 (whileExp)

    assignmentExp  go to state 18
    statement      go to state 36
    iterStat       go to state 23
    whileExp       go to state 37
    selStat        go to state 24
    functionStat   go to state 25
    classStat      go to state 26


State 6

   59 selStat: T_case . T_id whenStat T_end

    T_id  shift, and go to state 38


State 7

   55 iterStat: T_while . conditionalExp T_do whileExp T_end

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11
    T_not      shift, and go to state 12

    relationalExp   go to state 40
    booleanExp      go to state 41
    conditionalExp  go to state 42
    term            go to state 43
    term1           go to state 21
    term2           go to state 22


State 8

   43 statement: T_return . term

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    term   go to state 44
    term1  go to state 21
    term2  go to state 22


State 9

   67 functionStat: T_def . T_id T_openpar T_id T_closepar funcExp T_end

    T_id  shift, and go to state 45


State 10

   71 classStat: T_class . T_id classExp T_end

    T_id  shift, and go to state 46


State 11

   53 term1: T_openpar . operatorExp T_closepar

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    operatorExp  go to state 47
    term         go to state 48
    term1        go to state 21
    term2        go to state 22


State 12

   16 booleanExp: T_not . relationalExp

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    relationalExp  go to state 49
    term           go to state 43
    term1          go to state 21
    term2          go to state 22


State 13

    0 $accept: line . $end
    2 line: line . expression
    4     | line . statement

    $end       shift, and go to state 50
    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 4
    T_begin    shift, and go to state 5
    T_case     shift, and go to state 6
    T_while    shift, and go to state 7
    T_return   shift, and go to state 8
    T_def      shift, and go to state 9
    T_class    shift, and go to state 10
    T_openpar  shift, and go to state 11
    T_not      shift, and go to state 12

    expression     go to state 51
    operatorExp    go to state 15
    relationalExp  go to state 16
    booleanExp     go to state 17
    assignmentExp  go to state 18
    statement      go to state 52
    term           go to state 20
    term1          go to state 21
    term2          go to state 22
    iterStat       go to state 23
    selStat        go to state 24
    functionStat   go to state 25
    classStat      go to state 26


State 14

    1 line: expression .

    $default  reduce using rule 1 (line)


State 15

    7 expression: operatorExp .
    8 operatorExp: operatorExp . '*' operatorExp
    9            | operatorExp . '/' operatorExp
   10            | operatorExp . '+' operatorExp
   11            | operatorExp . '-' operatorExp

    '-'  shift, and go to state 53
    '+'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 7 (expression)


State 16

   15 booleanExp: relationalExp . boolExp2

    T_and  shift, and go to state 57
    T_or   shift, and go to state 58

    boolExp2  go to state 59


State 17

    6 expression: booleanExp .

    $default  reduce using rule 6 (expression)


State 18

   46 statement: assignmentExp .

    $default  reduce using rule 46 (statement)


State 19

    3 line: statement .

    $default  reduce using rule 3 (line)


State 20

   12 operatorExp: term .
   13 relationalExp: term . T_REL_OP_SING term
   14              | term . relDbl term

    T_REL_OP_SING  shift, and go to state 60
    T_comp         shift, and go to state 61
    T_gte          shift, and go to state 62
    T_lte          shift, and go to state 63
    T_ne           shift, and go to state 64
    T_ccomp        shift, and go to state 65
    T_scomp        shift, and go to state 66

    $default  reduce using rule 12 (operatorExp)

    relDbl  go to state 67


State 21

   49 term: term1 .

    $default  reduce using rule 49 (term)


State 22

   50 term: term2 .

    $default  reduce using rule 50 (term)


State 23

   44 statement: iterStat .

    $default  reduce using rule 44 (statement)


State 24

   45 statement: selStat .

    $default  reduce using rule 45 (statement)


State 25

   47 statement: functionStat .

    $default  reduce using rule 47 (statement)


State 26

   48 statement: classStat .

    $default  reduce using rule 48 (statement)


State 27

    5 line: error '\n' .

    $default  reduce using rule 5 (line)


State 28

   26 assignmentExp: T_id T_asop . operatorExp
   27              | T_id T_asop . arrayExp
   28              | T_id T_asop . T_string

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_string   shift, and go to state 68
    T_openpar  shift, and go to state 11
    T_openbox  shift, and go to state 69

    operatorExp  go to state 70
    arrayExp     go to state 71
    term         go to state 48
    term1        go to state 21
    term2        go to state 22


State 29

   34 assignmentExp: T_id T_expas . expression

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11
    T_not      shift, and go to state 12

    expression     go to state 72
    operatorExp    go to state 15
    relationalExp  go to state 16
    booleanExp     go to state 17
    term           go to state 20
    term1          go to state 21
    term2          go to state 22


State 30

   29 assignmentExp: T_id T_addas . expression

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11
    T_not      shift, and go to state 12

    expression     go to state 73
    operatorExp    go to state 15
    relationalExp  go to state 16
    booleanExp     go to state 17
    term           go to state 20
    term1          go to state 21
    term2          go to state 22


State 31

   30 assignmentExp: T_id T_subas . expression

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11
    T_not      shift, and go to state 12

    expression     go to state 74
    operatorExp    go to state 15
    relationalExp  go to state 16
    booleanExp     go to state 17
    term           go to state 20
    term1          go to state 21
    term2          go to state 22


State 32

   31 assignmentExp: T_id T_mulas . expression

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11
    T_not      shift, and go to state 12

    expression     go to state 75
    operatorExp    go to state 15
    relationalExp  go to state 16
    booleanExp     go to state 17
    term           go to state 20
    term1          go to state 21
    term2          go to state 22


State 33

   32 assignmentExp: T_id T_divas . expression

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11
    T_not      shift, and go to state 12

    expression     go to state 76
    operatorExp    go to state 15
    relationalExp  go to state 16
    booleanExp     go to state 17
    term           go to state 20
    term1          go to state 21
    term2          go to state 22


State 34

   33 assignmentExp: T_id T_modas . expression

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11
    T_not      shift, and go to state 12

    expression     go to state 77
    operatorExp    go to state 15
    relationalExp  go to state 16
    booleanExp     go to state 17
    term           go to state 20
    term1          go to state 21
    term2          go to state 22


State 35

   26 assignmentExp: T_id . T_asop operatorExp
   27              | T_id . T_asop arrayExp
   28              | T_id . T_asop T_string
   29              | T_id . T_addas expression
   30              | T_id . T_subas expression
   31              | T_id . T_mulas expression
   32              | T_id . T_divas expression
   33              | T_id . T_modas expression
   34              | T_id . T_expas expression

    T_asop   shift, and go to state 28
    T_expas  shift, and go to state 29
    T_addas  shift, and go to state 30
    T_subas  shift, and go to state 31
    T_mulas  shift, and go to state 32
    T_divas  shift, and go to state 33
    T_modas  shift, and go to state 34


State 36

   57 whileExp: statement . whileExp

    T_id      shift, and go to state 35
    T_begin   shift, and go to state 5
    T_case    shift, and go to state 6
    T_while   shift, and go to state 7
    T_return  shift, and go to state 8
    T_def     shift, and go to state 9
    T_class   shift, and go to state 10

    $default  reduce using rule 58 (whileExp)

    assignmentExp  go to state 18
    statement      go to state 36
    iterStat       go to state 23
    whileExp       go to state 78
    selStat        go to state 24
    functionStat   go to state 25
    classStat      go to state 26


State 37

   56 iterStat: T_begin whileExp . T_end T_while conditionalExp

    T_end  shift, and go to state 79


State 38

   59 selStat: T_case T_id . whenStat T_end

    T_when  shift, and go to state 80

    whenStat  go to state 81


State 39

   54 term2: T_id .

    $default  reduce using rule 54 (term2)


State 40

   15 booleanExp: relationalExp . boolExp2
   35 conditionalExp: relationalExp .

    T_and  shift, and go to state 57
    T_or   shift, and go to state 58

    $default  reduce using rule 35 (conditionalExp)

    boolExp2  go to state 59


State 41

   36 conditionalExp: booleanExp .

    $default  reduce using rule 36 (conditionalExp)


State 42

   55 iterStat: T_while conditionalExp . T_do whileExp T_end

    T_do  shift, and go to state 82


State 43

   13 relationalExp: term . T_REL_OP_SING term
   14              | term . relDbl term

    T_REL_OP_SING  shift, and go to state 60
    T_comp         shift, and go to state 61
    T_gte          shift, and go to state 62
    T_lte          shift, and go to state 63
    T_ne           shift, and go to state 64
    T_ccomp        shift, and go to state 65
    T_scomp        shift, and go to state 66

    relDbl  go to state 67


State 44

   43 statement: T_return term .

    $default  reduce using rule 43 (statement)


State 45

   67 functionStat: T_def T_id . T_openpar T_id T_closepar funcExp T_end

    T_openpar  shift, and go to state 83


State 46

   71 classStat: T_class T_id . classExp T_end

    T_id      shift, and go to state 35
    T_begin   shift, and go to state 5
    T_case    shift, and go to state 6
    T_while   shift, and go to state 7
    T_return  shift, and go to state 8
    T_def     shift, and go to state 9
    T_class   shift, and go to state 10

    assignmentExp  go to state 18
    statement      go to state 84
    iterStat       go to state 23
    selStat        go to state 24
    functionStat   go to state 25
    classStat      go to state 26
    classExp       go to state 85


State 47

    8 operatorExp: operatorExp . '*' operatorExp
    9            | operatorExp . '/' operatorExp
   10            | operatorExp . '+' operatorExp
   11            | operatorExp . '-' operatorExp
   53 term1: T_openpar operatorExp . T_closepar

    T_closepar  shift, and go to state 86
    '-'         shift, and go to state 53
    '+'         shift, and go to state 54
    '*'         shift, and go to state 55
    '/'         shift, and go to state 56


State 48

   12 operatorExp: term .

    $default  reduce using rule 12 (operatorExp)


State 49

   16 booleanExp: T_not relationalExp .

    $default  reduce using rule 16 (booleanExp)


State 50

    0 $accept: line $end .

    $default  accept


State 51

    2 line: line expression .

    $default  reduce using rule 2 (line)


State 52

    4 line: line statement .

    $default  reduce using rule 4 (line)


State 53

   11 operatorExp: operatorExp '-' . operatorExp

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    operatorExp  go to state 87
    term         go to state 48
    term1        go to state 21
    term2        go to state 22


State 54

   10 operatorExp: operatorExp '+' . operatorExp

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    operatorExp  go to state 88
    term         go to state 48
    term1        go to state 21
    term2        go to state 22


State 55

    8 operatorExp: operatorExp '*' . operatorExp

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    operatorExp  go to state 89
    term         go to state 48
    term1        go to state 21
    term2        go to state 22


State 56

    9 operatorExp: operatorExp '/' . operatorExp

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    operatorExp  go to state 90
    term         go to state 48
    term1        go to state 21
    term2        go to state 22


State 57

   17 boolExp2: T_and . relationalExp

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    relationalExp  go to state 91
    term           go to state 43
    term1          go to state 21
    term2          go to state 22


State 58

   18 boolExp2: T_or . relationalExp

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    relationalExp  go to state 92
    term           go to state 43
    term1          go to state 21
    term2          go to state 22


State 59

   15 booleanExp: relationalExp boolExp2 .

    $default  reduce using rule 15 (booleanExp)


State 60

   13 relationalExp: term T_REL_OP_SING . term

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    term   go to state 93
    term1  go to state 21
    term2  go to state 22


State 61

   37 relDbl: T_comp .

    $default  reduce using rule 37 (relDbl)


State 62

   38 relDbl: T_gte .

    $default  reduce using rule 38 (relDbl)


State 63

   39 relDbl: T_lte .

    $default  reduce using rule 39 (relDbl)


State 64

   40 relDbl: T_ne .

    $default  reduce using rule 40 (relDbl)


State 65

   41 relDbl: T_ccomp .

    $default  reduce using rule 41 (relDbl)


State 66

   42 relDbl: T_scomp .

    $default  reduce using rule 42 (relDbl)


State 67

   14 relationalExp: term relDbl . term

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    term   go to state 94
    term1  go to state 21
    term2  go to state 22


State 68

   28 assignmentExp: T_id T_asop T_string .

    $default  reduce using rule 28 (assignmentExp)


State 69

   19 arrayExp: T_openbox . numList T_closebox

    T_int  shift, and go to state 95
    T_flt  shift, and go to state 96

    numList  go to state 97
    intList  go to state 98
    fltList  go to state 99


State 70

    8 operatorExp: operatorExp . '*' operatorExp
    9            | operatorExp . '/' operatorExp
   10            | operatorExp . '+' operatorExp
   11            | operatorExp . '-' operatorExp
   26 assignmentExp: T_id T_asop operatorExp .

    '-'  shift, and go to state 53
    '+'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 26 (assignmentExp)


State 71

   27 assignmentExp: T_id T_asop arrayExp .

    $default  reduce using rule 27 (assignmentExp)


State 72

   34 assignmentExp: T_id T_expas expression .

    $default  reduce using rule 34 (assignmentExp)


State 73

   29 assignmentExp: T_id T_addas expression .

    $default  reduce using rule 29 (assignmentExp)


State 74

   30 assignmentExp: T_id T_subas expression .

    $default  reduce using rule 30 (assignmentExp)


State 75

   31 assignmentExp: T_id T_mulas expression .

    $default  reduce using rule 31 (assignmentExp)


State 76

   32 assignmentExp: T_id T_divas expression .

    $default  reduce using rule 32 (assignmentExp)


State 77

   33 assignmentExp: T_id T_modas expression .

    $default  reduce using rule 33 (assignmentExp)


State 78

   57 whileExp: statement whileExp .

    $default  reduce using rule 57 (whileExp)


State 79

   56 iterStat: T_begin whileExp T_end . T_while conditionalExp

    T_while  shift, and go to state 100


State 80

   60 whenStat: T_when . term whenExp whenOptional

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11

    term   go to state 101
    term1  go to state 21
    term2  go to state 22


State 81

   59 selStat: T_case T_id whenStat . T_end

    T_end  shift, and go to state 102


State 82

   55 iterStat: T_while conditionalExp T_do . whileExp T_end

    T_id      shift, and go to state 35
    T_begin   shift, and go to state 5
    T_case    shift, and go to state 6
    T_while   shift, and go to state 7
    T_return  shift, and go to state 8
    T_def     shift, and go to state 9
    T_class   shift, and go to state 10

    $default  reduce using rule 58 (whileExp)

    assignmentExp  go to state 18
    statement      go to state 36
    iterStat       go to state 23
    whileExp       go to state 103
    selStat        go to state 24
    functionStat   go to state 25
    classStat      go to state 26


State 83

   67 functionStat: T_def T_id T_openpar . T_id T_closepar funcExp T_end

    T_id  shift, and go to state 104


State 84

   72 classExp: statement . classExp2

    T_id      shift, and go to state 35
    T_begin   shift, and go to state 5
    T_case    shift, and go to state 6
    T_while   shift, and go to state 7
    T_return  shift, and go to state 8
    T_def     shift, and go to state 9
    T_class   shift, and go to state 10

    $default  reduce using rule 74 (classExp2)

    assignmentExp  go to state 18
    statement      go to state 84
    iterStat       go to state 23
    selStat        go to state 24
    functionStat   go to state 25
    classStat      go to state 26
    classExp       go to state 105
    classExp2      go to state 106


State 85

   71 classStat: T_class T_id classExp . T_end

    T_end  shift, and go to state 107


State 86

   53 term1: T_openpar operatorExp T_closepar .

    $default  reduce using rule 53 (term1)


State 87

    8 operatorExp: operatorExp . '*' operatorExp
    9            | operatorExp . '/' operatorExp
   10            | operatorExp . '+' operatorExp
   11            | operatorExp . '-' operatorExp
   11            | operatorExp '-' operatorExp .

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 11 (operatorExp)


State 88

    8 operatorExp: operatorExp . '*' operatorExp
    9            | operatorExp . '/' operatorExp
   10            | operatorExp . '+' operatorExp
   10            | operatorExp '+' operatorExp .
   11            | operatorExp . '-' operatorExp

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56

    $default  reduce using rule 10 (operatorExp)


State 89

    8 operatorExp: operatorExp . '*' operatorExp
    8            | operatorExp '*' operatorExp .
    9            | operatorExp . '/' operatorExp
   10            | operatorExp . '+' operatorExp
   11            | operatorExp . '-' operatorExp

    $default  reduce using rule 8 (operatorExp)


State 90

    8 operatorExp: operatorExp . '*' operatorExp
    9            | operatorExp . '/' operatorExp
    9            | operatorExp '/' operatorExp .
   10            | operatorExp . '+' operatorExp
   11            | operatorExp . '-' operatorExp

    $default  reduce using rule 9 (operatorExp)


State 91

   17 boolExp2: T_and relationalExp .

    $default  reduce using rule 17 (boolExp2)


State 92

   18 boolExp2: T_or relationalExp .

    $default  reduce using rule 18 (boolExp2)


State 93

   13 relationalExp: term T_REL_OP_SING term .

    $default  reduce using rule 13 (relationalExp)


State 94

   14 relationalExp: term relDbl term .

    $default  reduce using rule 14 (relationalExp)


State 95

   22 intList: T_int . T_comma intList
   23        | T_int .

    T_comma  shift, and go to state 108

    $default  reduce using rule 23 (intList)


State 96

   24 fltList: T_flt . T_comma fltList
   25        | T_flt .

    T_comma  shift, and go to state 109

    $default  reduce using rule 25 (fltList)


State 97

   19 arrayExp: T_openbox numList . T_closebox

    T_closebox  shift, and go to state 110


State 98

   20 numList: intList .

    $default  reduce using rule 20 (numList)


State 99

   21 numList: fltList .

    $default  reduce using rule 21 (numList)


State 100

   56 iterStat: T_begin whileExp T_end T_while . conditionalExp

    T_int      shift, and go to state 2
    T_flt      shift, and go to state 3
    T_id       shift, and go to state 39
    T_openpar  shift, and go to state 11
    T_not      shift, and go to state 12

    relationalExp   go to state 40
    booleanExp      go to state 41
    conditionalExp  go to state 111
    term            go to state 43
    term1           go to state 21
    term2           go to state 22


State 101

   60 whenStat: T_when term . whenExp whenOptional

    T_id      shift, and go to state 35
    T_begin   shift, and go to state 5
    T_case    shift, and go to state 6
    T_while   shift, and go to state 7
    T_return  shift, and go to state 8
    T_def     shift, and go to state 9
    T_class   shift, and go to state 10

    assignmentExp  go to state 18
    statement      go to state 112
    iterStat       go to state 23
    selStat        go to state 24
    whenExp        go to state 113
    functionStat   go to state 25
    classStat      go to state 26


State 102

   59 selStat: T_case T_id whenStat T_end .

    $default  reduce using rule 59 (selStat)


State 103

   55 iterStat: T_while conditionalExp T_do whileExp . T_end

    T_end  shift, and go to state 114


State 104

   67 functionStat: T_def T_id T_openpar T_id . T_closepar funcExp T_end

    T_closepar  shift, and go to state 115


State 105

   73 classExp2: classExp .

    $default  reduce using rule 73 (classExp2)


State 106

   72 classExp: statement classExp2 .

    $default  reduce using rule 72 (classExp)


State 107

   71 classStat: T_class T_id classExp T_end .

    $default  reduce using rule 71 (classStat)


State 108

   22 intList: T_int T_comma . intList

    T_int  shift, and go to state 95

    intList  go to state 116


State 109

   24 fltList: T_flt T_comma . fltList

    T_flt  shift, and go to state 96

    fltList  go to state 117


State 110

   19 arrayExp: T_openbox numList T_closebox .

    $default  reduce using rule 19 (arrayExp)


State 111

   56 iterStat: T_begin whileExp T_end T_while conditionalExp .

    $default  reduce using rule 56 (iterStat)


State 112

   61 whenExp: statement . whenExpOpt

    T_id      shift, and go to state 35
    T_begin   shift, and go to state 5
    T_case    shift, and go to state 6
    T_while   shift, and go to state 7
    T_return  shift, and go to state 8
    T_def     shift, and go to state 9
    T_class   shift, and go to state 10

    $default  reduce using rule 66 (whenExpOpt)

    assignmentExp  go to state 18
    statement      go to state 112
    iterStat       go to state 23
    selStat        go to state 24
    whenExp        go to state 118
    whenExpOpt     go to state 119
    functionStat   go to state 25
    classStat      go to state 26


State 113

   60 whenStat: T_when term whenExp . whenOptional

    T_when  shift, and go to state 80
    T_else  shift, and go to state 120

    $default  reduce using rule 64 (whenOptional)

    whenStat      go to state 121
    whenOptional  go to state 122


State 114

   55 iterStat: T_while conditionalExp T_do whileExp T_end .

    $default  reduce using rule 55 (iterStat)


State 115

   67 functionStat: T_def T_id T_openpar T_id T_closepar . funcExp T_end

    T_id      shift, and go to state 35
    T_begin   shift, and go to state 5
    T_case    shift, and go to state 6
    T_while   shift, and go to state 7
    T_return  shift, and go to state 8
    T_def     shift, and go to state 9
    T_class   shift, and go to state 10

    assignmentExp  go to state 18
    statement      go to state 123
    iterStat       go to state 23
    selStat        go to state 24
    functionStat   go to state 25
    funcExp        go to state 124
    classStat      go to state 26


State 116

   22 intList: T_int T_comma intList .

    $default  reduce using rule 22 (intList)


State 117

   24 fltList: T_flt T_comma fltList .

    $default  reduce using rule 24 (fltList)


State 118

   65 whenExpOpt: whenExp .

    $default  reduce using rule 65 (whenExpOpt)


State 119

   61 whenExp: statement whenExpOpt .

    $default  reduce using rule 61 (whenExp)


State 120

   62 whenOptional: T_else . whenExp

    T_id      shift, and go to state 35
    T_begin   shift, and go to state 5
    T_case    shift, and go to state 6
    T_while   shift, and go to state 7
    T_return  shift, and go to state 8
    T_def     shift, and go to state 9
    T_class   shift, and go to state 10

    assignmentExp  go to state 18
    statement      go to state 112
    iterStat       go to state 23
    selStat        go to state 24
    whenExp        go to state 125
    functionStat   go to state 25
    classStat      go to state 26


State 121

   63 whenOptional: whenStat .

    $default  reduce using rule 63 (whenOptional)


State 122

   60 whenStat: T_when term whenExp whenOptional .

    $default  reduce using rule 60 (whenStat)


State 123

   68 funcExp: statement . funcExp2

    T_id      shift, and go to state 35
    T_begin   shift, and go to state 5
    T_case    shift, and go to state 6
    T_while   shift, and go to state 7
    T_return  shift, and go to state 8
    T_def     shift, and go to state 9
    T_class   shift, and go to state 10

    $default  reduce using rule 70 (funcExp2)

    assignmentExp  go to state 18
    statement      go to state 123
    iterStat       go to state 23
    selStat        go to state 24
    functionStat   go to state 25
    funcExp        go to state 126
    funcExp2       go to state 127
    classStat      go to state 26


State 124

   67 functionStat: T_def T_id T_openpar T_id T_closepar funcExp . T_end

    T_end  shift, and go to state 128


State 125

   62 whenOptional: T_else whenExp .

    $default  reduce using rule 62 (whenOptional)


State 126

   69 funcExp2: funcExp .

    $default  reduce using rule 69 (funcExp2)


State 127

   68 funcExp: statement funcExp2 .

    $default  reduce using rule 68 (funcExp)


State 128

   67 functionStat: T_def T_id T_openpar T_id T_closepar funcExp T_end .

    $default  reduce using rule 67 (functionStat)
